# Copyright 2018 The Kubernetes Authors.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- ansible.builtin.import_tasks: debian.yml
  when: kubernetes_source_type == "pkg" and ansible_os_family == "Debian"

- ansible.builtin.import_tasks: azurelinux.yml
  when: kubernetes_source_type == "pkg" and ansible_os_family in ["Common Base Linux Mariner", "Microsoft Azure Linux"]

- ansible.builtin.import_tasks: redhat.yml
  when: kubernetes_source_type == "pkg" and ansible_os_family == "RedHat"

- ansible.builtin.import_tasks: photon.yml
  when: kubernetes_source_type == "pkg" and ansible_os_family == "VMware Photon OS"

- name: Symlink cri-tools
  ansible.builtin.file:
    src: /usr/local/bin/{{ item }}
    dest: /usr/bin/{{ item }}
    mode: "0777"
    state: link
    force: true
  loop:
    - ctr
    - crictl
    - critest
  when: ansible_os_family != "Flatcar"

- ansible.builtin.import_tasks: url.yml
  when: kubernetes_source_type == "http" and kubernetes_cni_source_type == "http"

# must include crictl-url.yml after installing the CRI selected,
# as the cri-containerd tarball also includes crictl.
- ansible.builtin.import_tasks: crictl-url.yml
  when: crictl_source_type == "http"

- name: Create kubelet default config file
  ansible.builtin.template:
    src: etc/sysconfig/kubelet
    dest: "{{ '/etc/default/kubelet' if ansible_os_family == 'Debian' else '/etc/sysconfig/kubelet' }}"
    owner: root
    group: root
    mode: "0644"

- name: Enable kubelet service
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    enabled: true
    state: stopped

- name: Create the Kubernetes version file
  ansible.builtin.template:
    dest: /etc/kubernetes-version
    src: etc/kubernetes-version
    mode: "0644"

- name: Create libexec directory
  ansible.builtin.file:
    state: directory
    path: "{{ sysusr_prefix }}/libexec/kubernetes"
    mode: "0755"
    owner: root
    group: root

- name: Drop kubelet resource sizing script
  ansible.builtin.copy:
    src: files/usr/libexec/kubernetes/kubelet-resource-sizing.sh
    dest: "{{ sysusr_prefix }}/libexec/kubernetes/kubelet-resource-sizing.sh"
    owner: root
    group: root
    mode: "0755"
  when: kubernetes_enable_automatic_resource_sizing | bool

- name: Drop kubelet resource sizing systemd unit file
  ansible.builtin.template:
    src: usr/lib/systemd/system/kubelet.service.d/11-resource-sizing.conf
    dest: "{{ systemd_prefix }}/system/kubelet.service.d/11-resource-sizing.conf"
    owner: root
    group: root
    mode: "0644"
  when: kubernetes_enable_automatic_resource_sizing | bool

- name: Generate kubectl bash completion
  ansible.builtin.shell:
    cmd: "{{ sysusr_prefix }}/bin/kubectl completion bash > {{ sysusr_prefix }}/share/bash-completion/completions/kubectl"
    creates: "{{ sysusr_prefix }}/share/bash-completion/completions/kubectl"
  when: ansible_os_family != "Flatcar"

- name: Generate kubeadm bash completion
  ansible.builtin.shell:
    cmd: "{{ sysusr_prefix }}/bin/kubeadm completion bash > {{ sysusr_prefix }}/share/bash-completion/completions/kubeadm"
    creates: "{{ sysusr_prefix }}/share/bash-completion/completions/kubeadm"
  when: ansible_os_family != "Flatcar"

- name: Generate crictl bash completion
  ansible.builtin.shell:
    cmd: "{{ sysusr_prefix }}/bin/crictl completion bash > {{ sysusr_prefix }}/share/bash-completion/completions/crictl"
    creates: "{{ sysusr_prefix }}/share/bash-completion/completions/crictl"
  when: ansible_os_family != "Flatcar"

- name: Set KUBECONFIG variable and alias
  ansible.builtin.copy:
    dest: /etc/profile.d/kubernetes.sh
    src: etc/profile.d/kubernetes.sh
    owner: root
    group: root
    mode: "0644"

# TODO: This section will be deprecated once https://github.com/containerd/cri/issues/1131 is fixed. It is used to support ECR with containerd.
- name: Check if Kubernetes container registry is using Amazon ECR
  ansible.builtin.set_fact:
    ecr: '{{ kubernetes_container_registry is regex("^[0-9]{12}.dkr.ecr.[^.]+.amazonaws.com$") }}'

- ansible.builtin.import_tasks: kubeadmpull.yml
  when: (kubernetes_source_type == "pkg" and not ecr) or ansible_os_family == "Flatcar"

- ansible.builtin.import_tasks: ecrpull.yml
  when: kubernetes_source_type != "http" and ecr
